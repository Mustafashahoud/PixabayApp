apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply plugin: 'androidx.navigation.safeargs.kotlin'


android {

    apply plugin: 'checkstyle'
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.mustafa.pixabayapp"
        minSdkVersion 24
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding {
        enabled = true
    }

    sourceSets {
        androidTest.java.srcDirs += "src/test-common/java"
        test.java.srcDirs += "src/test-common/java"
    }
}

dependencies {

    def glideVersion = '4.10.0'
    def room_version = "2.2.0-rc01"
    def lifecycle_version = "2.1.0"
    def retrofit_version = '2.6.2'
    def dagger_version = "2.24"
    def material_version = "1.0.0"
    def nav_version = "2.1.0"


    def arch_version = '2.1.0'
    def android_test_version = "1.2.0"
    def mock_web_server_version = "4.2.1"
    def mockito_version = "2.19.0"
    def hamcrest_version = "1.3"


    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    //noinspection LifecycleAnnotationProcessorWithJava8
    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"

    // Room
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

   // material
    implementation "com.google.android.material:material:$material_version"

    // Dagger2
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    // dagger.android
    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"

    // Glide
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    kapt "com.github.bumptech.glide:compiler:$glideVersion"

    //Retrofit2
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"

    // navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"


    testImplementation 'junit:junit:4.12'
    testImplementation "org.mockito:mockito-core:$mockito_version"
    testImplementation "com.squareup.okhttp3:mockwebserver:$mock_web_server_version"
    testImplementation "androidx.arch.core:core-testing:$arch_version"

    androidTestImplementation "androidx.test:core:$android_test_version"
    androidTestImplementation "androidx.test:runner:$android_test_version"
    androidTestImplementation "androidx.test:rules:$android_test_version"
    androidTestImplementation "androidx.arch.core:core-testing:$arch_version"


    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

//    def rxJava_version = "2.2.12"
//    //rxJava it will be used later in another branch
//    implementation "io.reactivex.rxjava2:rxjava:$rxJava_version"
//
//    //RxJava Adapter for adapting RxJava "Retrofit call Adapter"
//    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
//
//    //ReactiveStreams support for LiveData
//    implementation "androidx.lifecycle:lifecycle-reactivestreams:$lifecycle_version"
}
